CREATE TABLE customers (
    id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(100),
    last_name VARCHAR(100),
    email VARCHAR(100)
);

CREATE TABLE orders (
    id INT AUTO_INCREMENT PRIMARY KEY,
    order_date DATE,
    amount DECIMAL(8 , 2 ),
    customer_id INT,
    FOREIGN KEY (customer_id)
        REFERENCES customers (id)
        ON DELETE CASCADE
);

INSERT INTO customers (first_name, last_name, email) 
VALUES ('Boy', 'George', 'george@gmail.com'),
       ('George', 'Michael', 'gm@gmail.com'),
       ('David', 'Bowie', 'david@gmail.com'),
       ('Blue', 'Steele', 'blue@gmail.com'),
       ('Bette', 'Davis', 'bette@aol.com');
       
INSERT INTO orders (order_date, amount, customer_id)
VALUES ('2016/02/10', 99.99, 1),
       ('2017/11/11', 35.50, 1),
       ('2014/12/12', 800.67, 2),
       ('2015/01/03', 12.50, 2),
       ('1999/04/11', 450.25, 5);
       
INSERT INTO orders (order_date, amount, customer_id)
VALUES ('2016/06/06', 33.67, 98);

select * from customers where last_name = 'George';
select * from orders where customer_id = '1';

SELECT 
    *
FROM
    orders
WHERE
    customer_id = (SELECT 
            id
        FROM
            customers
        WHERE
            last_name = 'George');
select * from customers,orders;

-- inner join

SELECT 
    *
FROM
    customers,
    orders
WHERE
    customers.id = orders.customer_id;
    
SELECT 
    *
FROM
    customers c,
    orders o
WHERE
    c.id = o.customer_id;
    
SELECT 
    first_name, last_name, SUM(amount)
FROM
    customers
        JOIN
    orders ON customers.id = orders.customer_id
GROUP BY customers.id;
SELECT 
    first_name,
    last_name,
    IFNULL(order_date, 0),
    IFNULL(SUM(amount), 0) AS total
FROM
    customers
        LEFT JOIN
    orders ON customers.id = orders.customer_id
GROUP BY customers.id;
select * from customers right join orders on customers.id = orders.customer_id;

drop table orders,customers;
CREATE TABLE customers (
    id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(100),
    last_name VARCHAR(100),
    email VARCHAR(100)
);

CREATE TABLE orders (
    id INT AUTO_INCREMENT PRIMARY KEY,
    order_date date,
    amount decimal(8,2),
    customer_id int
    #foreign key(customer_id) references customers(id)
);

INSERT INTO customers (first_name, last_name, email) 
VALUES ('Boy', 'George', 'george@gmail.com'),
       ('George', 'Michael', 'gm@gmail.com'),
       ('David', 'Bowie', 'david@gmail.com'),
       ('Blue', 'Steele', 'blue@gmail.com'),
       ('Bette', 'Davis', 'bette@aol.com');
       
INSERT INTO orders (order_date, amount, customer_id)
VALUES ('2016/02/10', 99.99, 1),
       ('2017/11/11', 35.50, 1),
       ('2014/12/12', 800.67, 2),
       ('2015/01/03', 12.50, 2),
       ('1999/04/11', 450.25, 5),
       ('2001/04/11', 778.20, 45),
       (curdate(), 980.25, 78);
       
       SELECT 
    first_name, last_name, SUM(amount)
FROM
    customers
        right JOIN
    orders ON customers.id = orders.customer_id
GROUP BY customers.id;    
delete from customers where first_name = 'Boy';
select * from customers;
select * from orders;

select * from customers left join orders ON customers.id = orders.customer_id;
select * from orders right join customers ON orders.customer_id = customers.id;

-- exercise
create table students ( id int auto_increment primary key, first_name varchar(100));
create table papers ( title varchar(100), grade decimal(5,2),student_id int, foreign key (STUDENT_id) references students(id));
INSERT INTO students (first_name) VALUES 
('Caleb'), 
('Samantha'), 
('Raj'), 
('Carlos'), 
('Lisa');
 
INSERT INTO papers (student_id, title, grade ) VALUES
(1, 'My First Book Report', 60),
(1, 'My Second Book Report', 75),
(2, 'Russian Lit Through The Ages', 94),
(2, 'De Montaigne and The Art of The Essay', 98),
(4, 'Borges and Magical Realism', 89);

drop tables students,papers;

SELECT first_name, ifnull(title,'Missing') as title, ifnull(grade,0) as grade
FROM students
left JOIN papers
    ON students.id = papers.student_id
ORDER BY grade DESC;

SELECT 
    first_name, ifnull(AVG(grade),0) AS grade
FROM
    students
        LEFT JOIN
    papers ON students.id = papers.student_id
GROUP BY first_name
ORDER BY grade DESC;

SELECT 
    first_name,
    IFNULL(AVG(grade), 0) AS grade,
    CASE
        WHEN AVG(grade) >= 75 THEN 'passing'
        else 'failing'
    END AS 'passing status'
FROM
    students
        LEFT JOIN
    papers ON students.id = papers.student_id
GROUP BY first_name
ORDER BY grade DESC;
